"use strict";

/* fonts from folder to scss */
function fontsStyle(params) {
  var file_content = fs.readFileSync(source_folder + "/scss/_fonts.scss");

  if (file_content == "") {
    fs.writeFile(source_folder + "/scss/_fonts.scss", "", cb);
    return fs.readdir(path.build.fonts, function (err, items) {
      if (items) {
        var c_fontname;

        for (var i = 0; i < items.length; i++) {
          var fontname = items[i].split(".");
          fontname = fontname[0];

          if (c_fontname != fontname) {
            fs.appendFile(source_folder + "/scss/_fonts.scss", '@include font-face("' + fontname + '", "' + fontname + '", "400", "normal");\r\n', cb);
          }

          c_fontname = fontname;
        }
      }
    });
  }
}

;
/* burger menu */

var menuIcon = document.querySelector(".menu__icon");
var menuBody = document.querySelector(".menu__body");

if (menuIcon) {
  menuIcon.addEventListener("click", function () {
    document.body.classList.toggle("locked");
    menuIcon.classList.toggle("menu__icon--active");
    menuBody.classList.toggle("menu__body--active");
  });
}
/* smooth scroll */


var menulinks = document.querySelectorAll("[data-scrollTo]");

if (menulinks.length > 0) {
  menulinks.forEach(function (menuLink) {
    menuLink.addEventListener("click", function (e) {
      var scrollTo = e.target.dataset.scrollto;
      var scrollToBlock = document.querySelector(scrollTo);
      var scrollToBlockValue = scrollToBlock.getBoundingClientRect().top + pageYOffset - document.querySelector(".header").offsetHeight;

      if (scrollTo && scrollToBlock) {
        e.preventDefault();
        window.scrollTo({
          top: scrollToBlockValue,
          behavior: "smooth"
        });
      }

      if (menuIcon.classList.contains("menu__icon--active")) {
        document.body.classList.remove("locked");
        menuIcon.classList.remove("menu__icon--active");
        menuBody.classList.remove("menu__body--active");
      }
    });
  });
}
/* sticky header on scroll*/


var header = document.querySelector(".header");
var sticky = header.offsetTop;

window.onscroll = function () {
  if (window.pageYOffset > sticky) {
    header.classList.add("header--sticky");
  } else {
    header.classList.remove("header--sticky");
  }
};

;
/* serviceList */

var serviceData = [{
  id: "1",
  cardImg: "../../img/service/Delivery.svg",
  cardTitle: "Free Delevery",
  cardPrice: "",
  cardText: "It is a long established fact that a reader will be the service.",
  btnText: ""
}, {
  id: "2",
  cardImg: "../../img/service/Guarantee.svg",
  cardTitle: "100% Guarantee",
  cardPrice: "",
  cardText: "It is a long established fact that a reader will be the service.",
  btnText: ""
}, {
  id: "3",
  cardImg: "../../img/service/Quality.svg",
  cardTitle: "Best Quality",
  cardPrice: "",
  cardText: "It is a long established fact that a reader will be the service.",
  btnText: ""
}];
var serviceList = document.querySelector(".service__list");

if (serviceData.length > 0) {
  for (var i = 0; i < serviceData.length; i++) {
    var card = "<li class=\"service__item\" data-cardId=\"".concat(serviceData[i].id, "\">");
    card += "<div class=\"card\">";

    if (serviceData[i].cardTitle) {
      card += "<img class=\"card__img\" src=\"".concat(serviceData[i].cardImg, "\" alt=\"").concat(serviceData[i].cardTitle, "\" width=\"255\" height=\"175\" />");
    }

    if (serviceData[i].cardTitle) {
      card += "<h3 class=\"card__title\">".concat(serviceData[i].cardTitle, "</h3>");
    }

    if (serviceData[i].cardPrice) {
      card += "<span class=\"card__price\">".concat(serviceData[i].cardPrice, "</span>");
    }

    if (serviceData[i].cardText) {
      card += "<p class=\"card__text\">".concat(serviceData[i].cardText, "</p>");
    }

    if (serviceData[i].btnText) {
      card += "\n\t\t\t\t<div class=\"card__button\">\n\t\t\t\t\t<button class=\"btn\" href=\"#\" data-scrollTo=\"#\" rel=\"noreferrer\" type=\"button\">".concat(serviceData[i].btnText, "</button>\n\t\t\t\t</div>\n\t\t\t");
    }

    card += "</div></li>";
    serviceList.insertAdjacentHTML("beforeend", card);
  }
}

;
/* furnitureList */

/* furnitureData */

var furnitureData = [{
  id: "1",
  cardImg: "../../img/furniture/furniture__001.jpg",
  cardTitle: "Furniture Name",
  cardPrice: "$ 250",
  cardText: "It is a long estiabs lished fact that a reader will be the service",
  btnText: "Order Now"
}, {
  id: "2",
  cardImg: "../../img/furniture/furniture__002.jpg",
  cardTitle: "Furniture Name",
  cardPrice: "$ 250",
  cardText: "It is a long estiabs lished fact that a reader will be the service",
  btnText: "Order Now"
}, {
  id: "3",
  cardImg: "../../img/furniture/furniture__003.jpg",
  cardTitle: "Furniture Name",
  cardPrice: "$ 250",
  cardText: "It is a long estiabs lished fact that a reader will be the service",
  btnText: "Order Now"
}, {
  id: "4",
  cardImg: "../../img/furniture/furniture__004.jpg",
  cardTitle: "Furniture Name",
  cardPrice: "$ 250",
  cardText: "It is a long estiabs lished fact that a reader will be the service",
  btnText: "Order Now"
}, {
  id: "5",
  cardImg: "../../img/furniture/furniture__005.jpg",
  cardTitle: "Furniture Name",
  cardPrice: "$ 250",
  cardText: "It is a long estiabs lished fact that a reader will be the service",
  btnText: "Order Now"
}, {
  id: "6",
  cardImg: "../../img/furniture/furniture__006.jpg",
  cardTitle: "Furniture Name",
  cardPrice: "$ 250",
  cardText: "It is a long estiabs lished fact that a reader will be the service",
  btnText: "Order Now"
}, {
  id: "7",
  cardImg: "../../img/furniture/furniture__007.jpg",
  cardTitle: "Furniture Name",
  cardPrice: "$ 250",
  cardText: "It is a long estiabs lished fact that a reader will be the service",
  btnText: "Order Now"
}, {
  id: "8",
  cardImg: "../../img/furniture/furniture__008.jpg",
  cardTitle: "Furniture Name",
  cardPrice: "$ 250",
  cardText: "It is a long estiabs lished fact that a reader will be the service",
  btnText: "Order Now"
}];
;
var furnitureList = document.querySelector(".furniture__list");

if (furnitureData.length > 0) {
  for (var _i = 0; _i < furnitureData.length; _i++) {
    var _card = "<li class=\"service__item\" data-cardId=\"".concat(furnitureData[_i].id, "\">");

    _card += "<div class=\"card\">";

    if (furnitureData[_i].cardTitle) {
      _card += "<img class=\"card__img card__img--big\" src=\"".concat(furnitureData[_i].cardImg, "\" alt=\"").concat(furnitureData[_i].cardTitle, "\" width=\"255\" height=\"175\" />");
    }

    _card += "<div class=\"card__header\">";

    if (furnitureData[_i].cardTitle) {
      _card += "<h3 class=\"card__title\">".concat(furnitureData[_i].cardTitle, "</h3>");
    }

    if (furnitureData[_i].cardPrice) {
      _card += "<span class=\"card__price\">".concat(furnitureData[_i].cardPrice, "</span>");
    }

    _card += "</div>";

    if (furnitureData[_i].cardText) {
      _card += "<p class=\"card__text\">".concat(furnitureData[_i].cardText, "</p>");
    }

    if (furnitureData[_i].btnText) {
      _card += "\n\t\t\t\t<div class=\"card__button\">\n\t\t\t\t\t<button class=\"btn\" href=\"#\" data-scrollTo=\"#\" rel=\"noreferrer\" type=\"button\">".concat(furnitureData[_i].btnText, "</button>\n\t\t\t\t</div>\n\t\t\t");
    }

    _card += "</div></li>";
    furnitureList.insertAdjacentHTML("beforeend", _card);
  }
}

;
/* popup 404 for nonexistent links */

var nonexistentLinks = document.querySelectorAll('[href="#"]');
var popupBg = document.querySelector(".popup404");
var popup = document.querySelector(".popup404__body");
var closePopupButton = document.querySelector(".popup404__close");
nonexistentLinks.forEach(function (nonexistentLink) {
  nonexistentLink.addEventListener("click", function (e) {
    e.preventDefault();
    document.body.classList.add("locked");
    popupBg.classList.add("popup404--active");
    popup.classList.add("popup404__body--active");
  });
});
closePopupButton.addEventListener("click", function () {
  document.body.classList.remove("locked");
  popupBg.classList.remove("popup404--active");
  popup.classList.remove("popup404__body--active");
});
document.addEventListener("click", function (e) {
  if (e.target === popupBg) {
    document.body.classList.remove("locked");
    popupBg.classList.remove("popup404--active");
    popup.classList.remove("popup404__body--active");
  }
});
;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiZm9udHNTdHlsZSIsInBhcmFtcyIsImZpbGVfY29udGVudCIsImZzIiwicmVhZEZpbGVTeW5jIiwic291cmNlX2ZvbGRlciIsIndyaXRlRmlsZSIsImNiIiwicmVhZGRpciIsInBhdGgiLCJidWlsZCIsImZvbnRzIiwiZXJyIiwiaXRlbXMiLCJjX2ZvbnRuYW1lIiwiaSIsImxlbmd0aCIsImZvbnRuYW1lIiwic3BsaXQiLCJhcHBlbmRGaWxlIiwibWVudUljb24iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJtZW51Qm9keSIsImFkZEV2ZW50TGlzdGVuZXIiLCJib2R5IiwiY2xhc3NMaXN0IiwidG9nZ2xlIiwibWVudWxpbmtzIiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJtZW51TGluayIsImUiLCJzY3JvbGxUbyIsInRhcmdldCIsImRhdGFzZXQiLCJzY3JvbGx0byIsInNjcm9sbFRvQmxvY2siLCJzY3JvbGxUb0Jsb2NrVmFsdWUiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ0b3AiLCJwYWdlWU9mZnNldCIsIm9mZnNldEhlaWdodCIsInByZXZlbnREZWZhdWx0Iiwid2luZG93IiwiYmVoYXZpb3IiLCJjb250YWlucyIsInJlbW92ZSIsImhlYWRlciIsInN0aWNreSIsIm9mZnNldFRvcCIsIm9uc2Nyb2xsIiwiYWRkIiwic2VydmljZURhdGEiLCJpZCIsImNhcmRJbWciLCJjYXJkVGl0bGUiLCJjYXJkUHJpY2UiLCJjYXJkVGV4dCIsImJ0blRleHQiLCJzZXJ2aWNlTGlzdCIsImNhcmQiLCJpbnNlcnRBZGphY2VudEhUTUwiLCJmdXJuaXR1cmVEYXRhIiwiZnVybml0dXJlTGlzdCIsIm5vbmV4aXN0ZW50TGlua3MiLCJwb3B1cEJnIiwicG9wdXAiLCJjbG9zZVBvcHVwQnV0dG9uIiwibm9uZXhpc3RlbnRMaW5rIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBRUEsU0FBU0EsVUFBVCxDQUFvQkMsTUFBcEIsRUFBNEI7QUFDMUIsTUFBSUMsWUFBWSxHQUFHQyxFQUFFLENBQUNDLFlBQUgsQ0FBZ0JDLGFBQWEsR0FBRyxtQkFBaEMsQ0FBbkI7O0FBQ0EsTUFBSUgsWUFBWSxJQUFJLEVBQXBCLEVBQXdCO0FBQ3RCQyxJQUFBQSxFQUFFLENBQUNHLFNBQUgsQ0FBYUQsYUFBYSxHQUFHLG1CQUE3QixFQUFrRCxFQUFsRCxFQUFzREUsRUFBdEQ7QUFDQSxXQUFPSixFQUFFLENBQUNLLE9BQUgsQ0FBV0MsSUFBSSxDQUFDQyxLQUFMLENBQVdDLEtBQXRCLEVBQTZCLFVBQVVDLEdBQVYsRUFBZUMsS0FBZixFQUFzQjtBQUN4RCxVQUFJQSxLQUFKLEVBQVc7QUFDVCxZQUFJQyxVQUFKOztBQUNBLGFBQUssSUFBSUMsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0YsS0FBSyxDQUFDRyxNQUExQixFQUFrQ0QsQ0FBQyxFQUFuQyxFQUF1QztBQUNyQyxjQUFJRSxRQUFRLEdBQUdKLEtBQUssQ0FBQ0UsQ0FBRCxDQUFMLENBQVNHLEtBQVQsQ0FBZSxHQUFmLENBQWY7QUFDQUQsVUFBQUEsUUFBUSxHQUFHQSxRQUFRLENBQUMsQ0FBRCxDQUFuQjs7QUFDQSxjQUFJSCxVQUFVLElBQUlHLFFBQWxCLEVBQTRCO0FBQzFCZCxZQUFBQSxFQUFFLENBQUNnQixVQUFILENBQ0VkLGFBQWEsR0FBRyxtQkFEbEIsRUFFRSx5QkFBeUJZLFFBQXpCLEdBQW9DLE1BQXBDLEdBQTZDQSxRQUE3QyxHQUF3RCwwQkFGMUQsRUFHRVYsRUFIRjtBQUtEOztBQUNETyxVQUFBQSxVQUFVLEdBQUdHLFFBQWI7QUFDRDtBQUNGO0FBQ0YsS0FoQk0sQ0FBUDtBQWlCRDtBQUNGOztBQUNEO0FBQ0E7O0FBRUEsSUFBTUcsUUFBUSxHQUFHQyxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsYUFBdkIsQ0FBakI7QUFDQSxJQUFNQyxRQUFRLEdBQUdGLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixhQUF2QixDQUFqQjs7QUFFQSxJQUFJRixRQUFKLEVBQWM7QUFDWkEsRUFBQUEsUUFBUSxDQUFDSSxnQkFBVCxDQUEwQixPQUExQixFQUFtQyxZQUFZO0FBQzdDSCxJQUFBQSxRQUFRLENBQUNJLElBQVQsQ0FBY0MsU0FBZCxDQUF3QkMsTUFBeEIsQ0FBK0IsUUFBL0I7QUFDQVAsSUFBQUEsUUFBUSxDQUFDTSxTQUFULENBQW1CQyxNQUFuQixDQUEwQixvQkFBMUI7QUFDQUosSUFBQUEsUUFBUSxDQUFDRyxTQUFULENBQW1CQyxNQUFuQixDQUEwQixvQkFBMUI7QUFDRCxHQUpEO0FBS0Q7QUFFRDs7O0FBQ0EsSUFBTUMsU0FBUyxHQUFHUCxRQUFRLENBQUNRLGdCQUFULENBQTBCLGlCQUExQixDQUFsQjs7QUFFQSxJQUFJRCxTQUFTLENBQUNaLE1BQVYsR0FBbUIsQ0FBdkIsRUFBMEI7QUFDeEJZLEVBQUFBLFNBQVMsQ0FBQ0UsT0FBVixDQUFrQixVQUFDQyxRQUFELEVBQWM7QUFDOUJBLElBQUFBLFFBQVEsQ0FBQ1AsZ0JBQVQsQ0FBMEIsT0FBMUIsRUFBbUMsVUFBVVEsQ0FBVixFQUFhO0FBQzlDLFVBQU1DLFFBQVEsR0FBR0QsQ0FBQyxDQUFDRSxNQUFGLENBQVNDLE9BQVQsQ0FBaUJDLFFBQWxDO0FBQ0EsVUFBTUMsYUFBYSxHQUFHaEIsUUFBUSxDQUFDQyxhQUFULENBQXVCVyxRQUF2QixDQUF0QjtBQUNBLFVBQU1LLGtCQUFrQixHQUFHRCxhQUFhLENBQUNFLHFCQUFkLEdBQXNDQyxHQUF0QyxHQUE0Q0MsV0FBNUMsR0FBMERwQixRQUFRLENBQUNDLGFBQVQsQ0FBdUIsU0FBdkIsRUFBa0NvQixZQUF2SDs7QUFFQSxVQUFJVCxRQUFRLElBQUlJLGFBQWhCLEVBQStCO0FBQzdCTCxRQUFBQSxDQUFDLENBQUNXLGNBQUY7QUFFQUMsUUFBQUEsTUFBTSxDQUFDWCxRQUFQLENBQWdCO0FBQ2RPLFVBQUFBLEdBQUcsRUFBRUYsa0JBRFM7QUFFZE8sVUFBQUEsUUFBUSxFQUFFO0FBRkksU0FBaEI7QUFJRDs7QUFFRCxVQUFJekIsUUFBUSxDQUFDTSxTQUFULENBQW1Cb0IsUUFBbkIsQ0FBNEIsb0JBQTVCLENBQUosRUFBdUQ7QUFDckR6QixRQUFBQSxRQUFRLENBQUNJLElBQVQsQ0FBY0MsU0FBZCxDQUF3QnFCLE1BQXhCLENBQStCLFFBQS9CO0FBQ0EzQixRQUFBQSxRQUFRLENBQUNNLFNBQVQsQ0FBbUJxQixNQUFuQixDQUEwQixvQkFBMUI7QUFDQXhCLFFBQUFBLFFBQVEsQ0FBQ0csU0FBVCxDQUFtQnFCLE1BQW5CLENBQTBCLG9CQUExQjtBQUNEO0FBQ0YsS0FuQkQ7QUFvQkQsR0FyQkQ7QUFzQkQ7QUFFRDs7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHM0IsUUFBUSxDQUFDQyxhQUFULENBQXVCLFNBQXZCLENBQWY7QUFDQSxJQUFNMkIsTUFBTSxHQUFHRCxNQUFNLENBQUNFLFNBQXRCOztBQUVBTixNQUFNLENBQUNPLFFBQVAsR0FBa0IsWUFBWTtBQUM1QixNQUFJUCxNQUFNLENBQUNILFdBQVAsR0FBcUJRLE1BQXpCLEVBQWlDO0FBQy9CRCxJQUFBQSxNQUFNLENBQUN0QixTQUFQLENBQWlCMEIsR0FBakIsQ0FBcUIsZ0JBQXJCO0FBQ0QsR0FGRCxNQUVPO0FBQ0xKLElBQUFBLE1BQU0sQ0FBQ3RCLFNBQVAsQ0FBaUJxQixNQUFqQixDQUF3QixnQkFBeEI7QUFDRDtBQUNGLENBTkQ7O0FBT0E7QUFDQTs7QUFFQSxJQUFNTSxXQUFXLEdBQUcsQ0FDbEI7QUFDRUMsRUFBQUEsRUFBRSxFQUFFLEdBRE47QUFFRUMsRUFBQUEsT0FBTyxFQUFFLGdDQUZYO0FBR0VDLEVBQUFBLFNBQVMsRUFBRSxlQUhiO0FBSUVDLEVBQUFBLFNBQVMsRUFBRSxFQUpiO0FBS0VDLEVBQUFBLFFBQVEsRUFBRSxrRUFMWjtBQU1FQyxFQUFBQSxPQUFPLEVBQUU7QUFOWCxDQURrQixFQVNsQjtBQUNFTCxFQUFBQSxFQUFFLEVBQUUsR0FETjtBQUVFQyxFQUFBQSxPQUFPLEVBQUUsaUNBRlg7QUFHRUMsRUFBQUEsU0FBUyxFQUFFLGdCQUhiO0FBSUVDLEVBQUFBLFNBQVMsRUFBRSxFQUpiO0FBS0VDLEVBQUFBLFFBQVEsRUFBRSxrRUFMWjtBQU1FQyxFQUFBQSxPQUFPLEVBQUU7QUFOWCxDQVRrQixFQWlCbEI7QUFDRUwsRUFBQUEsRUFBRSxFQUFFLEdBRE47QUFFRUMsRUFBQUEsT0FBTyxFQUFFLCtCQUZYO0FBR0VDLEVBQUFBLFNBQVMsRUFBRSxjQUhiO0FBSUVDLEVBQUFBLFNBQVMsRUFBRSxFQUpiO0FBS0VDLEVBQUFBLFFBQVEsRUFBRSxrRUFMWjtBQU1FQyxFQUFBQSxPQUFPLEVBQUU7QUFOWCxDQWpCa0IsQ0FBcEI7QUEyQkEsSUFBTUMsV0FBVyxHQUFHdkMsUUFBUSxDQUFDQyxhQUFULENBQXVCLGdCQUF2QixDQUFwQjs7QUFFQSxJQUFJK0IsV0FBVyxDQUFDckMsTUFBWixHQUFxQixDQUF6QixFQUE0QjtBQUMxQixPQUFLLElBQUlELENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdzQyxXQUFXLENBQUNyQyxNQUFoQyxFQUF3Q0QsQ0FBQyxFQUF6QyxFQUE2QztBQUMzQyxRQUFJOEMsSUFBSSx1REFBNkNSLFdBQVcsQ0FBQ3RDLENBQUQsQ0FBWCxDQUFldUMsRUFBNUQsUUFBUjtBQUNGTyxJQUFBQSxJQUFJLDBCQUFKOztBQUNBLFFBQUlSLFdBQVcsQ0FBQ3RDLENBQUQsQ0FBWCxDQUFleUMsU0FBbkIsRUFBOEI7QUFDN0JLLE1BQUFBLElBQUksNkNBQW1DUixXQUFXLENBQUN0QyxDQUFELENBQVgsQ0FBZXdDLE9BQWxELHNCQUFtRUYsV0FBVyxDQUFDdEMsQ0FBRCxDQUFYLENBQWV5QyxTQUFsRix1Q0FBSjtBQUNBOztBQUNELFFBQUlILFdBQVcsQ0FBQ3RDLENBQUQsQ0FBWCxDQUFleUMsU0FBbkIsRUFBOEI7QUFDN0JLLE1BQUFBLElBQUksd0NBQStCUixXQUFXLENBQUN0QyxDQUFELENBQVgsQ0FBZXlDLFNBQTlDLFVBQUo7QUFDQTs7QUFDRCxRQUFJSCxXQUFXLENBQUN0QyxDQUFELENBQVgsQ0FBZTBDLFNBQW5CLEVBQThCO0FBQzdCSSxNQUFBQSxJQUFJLDBDQUFpQ1IsV0FBVyxDQUFDdEMsQ0FBRCxDQUFYLENBQWUwQyxTQUFoRCxZQUFKO0FBQ0E7O0FBQ0QsUUFBSUosV0FBVyxDQUFDdEMsQ0FBRCxDQUFYLENBQWUyQyxRQUFuQixFQUE2QjtBQUM1QkcsTUFBQUEsSUFBSSxzQ0FBNkJSLFdBQVcsQ0FBQ3RDLENBQUQsQ0FBWCxDQUFlMkMsUUFBNUMsU0FBSjtBQUNBOztBQUNELFFBQUlMLFdBQVcsQ0FBQ3RDLENBQUQsQ0FBWCxDQUFlNEMsT0FBbkIsRUFBNEI7QUFDM0JFLE1BQUFBLElBQUksd0pBRThFUixXQUFXLENBQUN0QyxDQUFELENBQVgsQ0FBZTRDLE9BRjdGLHNDQUFKO0FBS0E7O0FBQ0RFLElBQUFBLElBQUksaUJBQUo7QUFFRUQsSUFBQUEsV0FBVyxDQUFDRSxrQkFBWixDQUErQixXQUEvQixFQUE0Q0QsSUFBNUM7QUFDRDtBQUNGOztBQUNEO0FBQ0E7O0FBQ0E7O0FBRUEsSUFBTUUsYUFBYSxHQUFHLENBQ3BCO0FBQ0VULEVBQUFBLEVBQUUsRUFBRSxHQUROO0FBRUVDLEVBQUFBLE9BQU8sRUFBRSx3Q0FGWDtBQUdFQyxFQUFBQSxTQUFTLEVBQUUsZ0JBSGI7QUFJRUMsRUFBQUEsU0FBUyxFQUFFLE9BSmI7QUFLRUMsRUFBQUEsUUFBUSxFQUFFLG9FQUxaO0FBTUVDLEVBQUFBLE9BQU8sRUFBRTtBQU5YLENBRG9CLEVBU3BCO0FBQ0VMLEVBQUFBLEVBQUUsRUFBRSxHQUROO0FBRUVDLEVBQUFBLE9BQU8sRUFBRSx3Q0FGWDtBQUdFQyxFQUFBQSxTQUFTLEVBQUUsZ0JBSGI7QUFLRUMsRUFBQUEsU0FBUyxFQUFFLE9BTGI7QUFNRUMsRUFBQUEsUUFBUSxFQUFFLG9FQU5aO0FBT0VDLEVBQUFBLE9BQU8sRUFBRTtBQVBYLENBVG9CLEVBa0JwQjtBQUNFTCxFQUFBQSxFQUFFLEVBQUUsR0FETjtBQUVFQyxFQUFBQSxPQUFPLEVBQUUsd0NBRlg7QUFHRUMsRUFBQUEsU0FBUyxFQUFFLGdCQUhiO0FBSUVDLEVBQUFBLFNBQVMsRUFBRSxPQUpiO0FBS0VDLEVBQUFBLFFBQVEsRUFBRSxvRUFMWjtBQU1FQyxFQUFBQSxPQUFPLEVBQUU7QUFOWCxDQWxCb0IsRUEwQnBCO0FBQ0VMLEVBQUFBLEVBQUUsRUFBRSxHQUROO0FBRUVDLEVBQUFBLE9BQU8sRUFBRSx3Q0FGWDtBQUdFQyxFQUFBQSxTQUFTLEVBQUUsZ0JBSGI7QUFJRUMsRUFBQUEsU0FBUyxFQUFFLE9BSmI7QUFLRUMsRUFBQUEsUUFBUSxFQUFFLG9FQUxaO0FBTUVDLEVBQUFBLE9BQU8sRUFBRTtBQU5YLENBMUJvQixFQWtDcEI7QUFDRUwsRUFBQUEsRUFBRSxFQUFFLEdBRE47QUFFRUMsRUFBQUEsT0FBTyxFQUFFLHdDQUZYO0FBR0VDLEVBQUFBLFNBQVMsRUFBRSxnQkFIYjtBQUtFQyxFQUFBQSxTQUFTLEVBQUUsT0FMYjtBQU1FQyxFQUFBQSxRQUFRLEVBQUUsb0VBTlo7QUFPRUMsRUFBQUEsT0FBTyxFQUFFO0FBUFgsQ0FsQ29CLEVBMkNwQjtBQUNFTCxFQUFBQSxFQUFFLEVBQUUsR0FETjtBQUVFQyxFQUFBQSxPQUFPLEVBQUUsd0NBRlg7QUFHRUMsRUFBQUEsU0FBUyxFQUFFLGdCQUhiO0FBSUVDLEVBQUFBLFNBQVMsRUFBRSxPQUpiO0FBS0VDLEVBQUFBLFFBQVEsRUFBRSxvRUFMWjtBQU1FQyxFQUFBQSxPQUFPLEVBQUU7QUFOWCxDQTNDb0IsRUFtRHBCO0FBQ0VMLEVBQUFBLEVBQUUsRUFBRSxHQUROO0FBRUVDLEVBQUFBLE9BQU8sRUFBRSx3Q0FGWDtBQUdFQyxFQUFBQSxTQUFTLEVBQUUsZ0JBSGI7QUFLRUMsRUFBQUEsU0FBUyxFQUFFLE9BTGI7QUFNRUMsRUFBQUEsUUFBUSxFQUFFLG9FQU5aO0FBT0VDLEVBQUFBLE9BQU8sRUFBRTtBQVBYLENBbkRvQixFQTREcEI7QUFDRUwsRUFBQUEsRUFBRSxFQUFFLEdBRE47QUFFRUMsRUFBQUEsT0FBTyxFQUFFLHdDQUZYO0FBR0VDLEVBQUFBLFNBQVMsRUFBRSxnQkFIYjtBQUlFQyxFQUFBQSxTQUFTLEVBQUUsT0FKYjtBQUtFQyxFQUFBQSxRQUFRLEVBQUUsb0VBTFo7QUFNRUMsRUFBQUEsT0FBTyxFQUFFO0FBTlgsQ0E1RG9CLENBQXRCO0FBcUVBO0FBRUEsSUFBTUssYUFBYSxHQUFHM0MsUUFBUSxDQUFDQyxhQUFULENBQXVCLGtCQUF2QixDQUF0Qjs7QUFFQSxJQUFJeUMsYUFBYSxDQUFDL0MsTUFBZCxHQUF1QixDQUEzQixFQUE4QjtBQUM1QixPQUFLLElBQUlELEVBQUMsR0FBRyxDQUFiLEVBQWdCQSxFQUFDLEdBQUdnRCxhQUFhLENBQUMvQyxNQUFsQyxFQUEwQ0QsRUFBQyxFQUEzQyxFQUErQztBQUM3QyxRQUFJOEMsS0FBSSx1REFBNkNFLGFBQWEsQ0FBQ2hELEVBQUQsQ0FBYixDQUFpQnVDLEVBQTlELFFBQVI7O0FBQ0ZPLElBQUFBLEtBQUksMEJBQUo7O0FBQ0EsUUFBSUUsYUFBYSxDQUFDaEQsRUFBRCxDQUFiLENBQWlCeUMsU0FBckIsRUFBZ0M7QUFDL0JLLE1BQUFBLEtBQUksNERBQWtERSxhQUFhLENBQUNoRCxFQUFELENBQWIsQ0FBaUJ3QyxPQUFuRSxzQkFBb0ZRLGFBQWEsQ0FBQ2hELEVBQUQsQ0FBYixDQUFpQnlDLFNBQXJHLHVDQUFKO0FBQ0E7O0FBQ0NLLElBQUFBLEtBQUksa0NBQUo7O0FBQ0YsUUFBSUUsYUFBYSxDQUFDaEQsRUFBRCxDQUFiLENBQWlCeUMsU0FBckIsRUFBZ0M7QUFDL0JLLE1BQUFBLEtBQUksd0NBQStCRSxhQUFhLENBQUNoRCxFQUFELENBQWIsQ0FBaUJ5QyxTQUFoRCxVQUFKO0FBQ0E7O0FBQ0QsUUFBSU8sYUFBYSxDQUFDaEQsRUFBRCxDQUFiLENBQWlCMEMsU0FBckIsRUFBZ0M7QUFDL0JJLE1BQUFBLEtBQUksMENBQWlDRSxhQUFhLENBQUNoRCxFQUFELENBQWIsQ0FBaUIwQyxTQUFsRCxZQUFKO0FBQ0E7O0FBQ0NJLElBQUFBLEtBQUksWUFBSjs7QUFDRixRQUFJRSxhQUFhLENBQUNoRCxFQUFELENBQWIsQ0FBaUIyQyxRQUFyQixFQUErQjtBQUM5QkcsTUFBQUEsS0FBSSxzQ0FBNkJFLGFBQWEsQ0FBQ2hELEVBQUQsQ0FBYixDQUFpQjJDLFFBQTlDLFNBQUo7QUFDQTs7QUFDRCxRQUFJSyxhQUFhLENBQUNoRCxFQUFELENBQWIsQ0FBaUI0QyxPQUFyQixFQUE4QjtBQUM3QkUsTUFBQUEsS0FBSSx3SkFFOEVFLGFBQWEsQ0FBQ2hELEVBQUQsQ0FBYixDQUFpQjRDLE9BRi9GLHNDQUFKO0FBS0E7O0FBQ0RFLElBQUFBLEtBQUksaUJBQUo7QUFFRUcsSUFBQUEsYUFBYSxDQUFDRixrQkFBZCxDQUFpQyxXQUFqQyxFQUE4Q0QsS0FBOUM7QUFDRDtBQUNGOztBQUNEO0FBQ0E7O0FBRUEsSUFBTUksZ0JBQWdCLEdBQUc1QyxRQUFRLENBQUNRLGdCQUFULENBQTBCLFlBQTFCLENBQXpCO0FBRUEsSUFBTXFDLE9BQU8sR0FBRzdDLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixXQUF2QixDQUFoQjtBQUNBLElBQU02QyxLQUFLLEdBQUc5QyxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsaUJBQXZCLENBQWQ7QUFDQSxJQUFNOEMsZ0JBQWdCLEdBQUcvQyxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsa0JBQXZCLENBQXpCO0FBRUEyQyxnQkFBZ0IsQ0FBQ25DLE9BQWpCLENBQXlCLFVBQUN1QyxlQUFELEVBQXFCO0FBQzVDQSxFQUFBQSxlQUFlLENBQUM3QyxnQkFBaEIsQ0FBaUMsT0FBakMsRUFBMEMsVUFBQ1EsQ0FBRCxFQUFPO0FBQy9DQSxJQUFBQSxDQUFDLENBQUNXLGNBQUY7QUFDQXRCLElBQUFBLFFBQVEsQ0FBQ0ksSUFBVCxDQUFjQyxTQUFkLENBQXdCMEIsR0FBeEIsQ0FBNEIsUUFBNUI7QUFDQWMsSUFBQUEsT0FBTyxDQUFDeEMsU0FBUixDQUFrQjBCLEdBQWxCLENBQXNCLGtCQUF0QjtBQUNBZSxJQUFBQSxLQUFLLENBQUN6QyxTQUFOLENBQWdCMEIsR0FBaEIsQ0FBb0Isd0JBQXBCO0FBQ0QsR0FMRDtBQU1ELENBUEQ7QUFTQWdCLGdCQUFnQixDQUFDNUMsZ0JBQWpCLENBQWtDLE9BQWxDLEVBQTJDLFlBQU07QUFDL0NILEVBQUFBLFFBQVEsQ0FBQ0ksSUFBVCxDQUFjQyxTQUFkLENBQXdCcUIsTUFBeEIsQ0FBK0IsUUFBL0I7QUFDQW1CLEVBQUFBLE9BQU8sQ0FBQ3hDLFNBQVIsQ0FBa0JxQixNQUFsQixDQUF5QixrQkFBekI7QUFDQW9CLEVBQUFBLEtBQUssQ0FBQ3pDLFNBQU4sQ0FBZ0JxQixNQUFoQixDQUF1Qix3QkFBdkI7QUFDRCxDQUpEO0FBTUExQixRQUFRLENBQUNHLGdCQUFULENBQTBCLE9BQTFCLEVBQW1DLFVBQUNRLENBQUQsRUFBTztBQUN4QyxNQUFJQSxDQUFDLENBQUNFLE1BQUYsS0FBYWdDLE9BQWpCLEVBQTBCO0FBQ3hCN0MsSUFBQUEsUUFBUSxDQUFDSSxJQUFULENBQWNDLFNBQWQsQ0FBd0JxQixNQUF4QixDQUErQixRQUEvQjtBQUNBbUIsSUFBQUEsT0FBTyxDQUFDeEMsU0FBUixDQUFrQnFCLE1BQWxCLENBQXlCLGtCQUF6QjtBQUNBb0IsSUFBQUEsS0FBSyxDQUFDekMsU0FBTixDQUFnQnFCLE1BQWhCLENBQXVCLHdCQUF2QjtBQUNEO0FBQ0YsQ0FORDtBQU9BIiwic291cmNlc0NvbnRlbnQiOlsiLyogZm9udHMgZnJvbSBmb2xkZXIgdG8gc2NzcyAqL1xyXG5cclxuZnVuY3Rpb24gZm9udHNTdHlsZShwYXJhbXMpIHtcclxuICBsZXQgZmlsZV9jb250ZW50ID0gZnMucmVhZEZpbGVTeW5jKHNvdXJjZV9mb2xkZXIgKyBcIi9zY3NzL19mb250cy5zY3NzXCIpO1xyXG4gIGlmIChmaWxlX2NvbnRlbnQgPT0gXCJcIikge1xyXG4gICAgZnMud3JpdGVGaWxlKHNvdXJjZV9mb2xkZXIgKyBcIi9zY3NzL19mb250cy5zY3NzXCIsIFwiXCIsIGNiKTtcclxuICAgIHJldHVybiBmcy5yZWFkZGlyKHBhdGguYnVpbGQuZm9udHMsIGZ1bmN0aW9uIChlcnIsIGl0ZW1zKSB7XHJcbiAgICAgIGlmIChpdGVtcykge1xyXG4gICAgICAgIGxldCBjX2ZvbnRuYW1lO1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaXRlbXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgIGxldCBmb250bmFtZSA9IGl0ZW1zW2ldLnNwbGl0KFwiLlwiKTtcclxuICAgICAgICAgIGZvbnRuYW1lID0gZm9udG5hbWVbMF07XHJcbiAgICAgICAgICBpZiAoY19mb250bmFtZSAhPSBmb250bmFtZSkge1xyXG4gICAgICAgICAgICBmcy5hcHBlbmRGaWxlKFxyXG4gICAgICAgICAgICAgIHNvdXJjZV9mb2xkZXIgKyBcIi9zY3NzL19mb250cy5zY3NzXCIsXHJcbiAgICAgICAgICAgICAgJ0BpbmNsdWRlIGZvbnQtZmFjZShcIicgKyBmb250bmFtZSArICdcIiwgXCInICsgZm9udG5hbWUgKyAnXCIsIFwiNDAwXCIsIFwibm9ybWFsXCIpO1xcclxcbicsXHJcbiAgICAgICAgICAgICAgY2JcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGNfZm9udG5hbWUgPSBmb250bmFtZTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG47XHJcbi8qIGJ1cmdlciBtZW51ICovXHJcblxyXG5jb25zdCBtZW51SWNvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubWVudV9faWNvblwiKTtcclxuY29uc3QgbWVudUJvZHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1lbnVfX2JvZHlcIik7XHJcblxyXG5pZiAobWVudUljb24pIHtcclxuICBtZW51SWNvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QudG9nZ2xlKFwibG9ja2VkXCIpO1xyXG4gICAgbWVudUljb24uY2xhc3NMaXN0LnRvZ2dsZShcIm1lbnVfX2ljb24tLWFjdGl2ZVwiKTtcclxuICAgIG1lbnVCb2R5LmNsYXNzTGlzdC50b2dnbGUoXCJtZW51X19ib2R5LS1hY3RpdmVcIik7XHJcbiAgfSk7XHJcbn1cclxuXHJcbi8qIHNtb290aCBzY3JvbGwgKi9cclxuY29uc3QgbWVudWxpbmtzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIltkYXRhLXNjcm9sbFRvXVwiKTtcclxuXHJcbmlmIChtZW51bGlua3MubGVuZ3RoID4gMCkge1xyXG4gIG1lbnVsaW5rcy5mb3JFYWNoKChtZW51TGluaykgPT4ge1xyXG4gICAgbWVudUxpbmsuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgIGNvbnN0IHNjcm9sbFRvID0gZS50YXJnZXQuZGF0YXNldC5zY3JvbGx0bztcclxuICAgICAgY29uc3Qgc2Nyb2xsVG9CbG9jayA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2Nyb2xsVG8pO1xyXG4gICAgICBjb25zdCBzY3JvbGxUb0Jsb2NrVmFsdWUgPSBzY3JvbGxUb0Jsb2NrLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCArIHBhZ2VZT2Zmc2V0IC0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5oZWFkZXJcIikub2Zmc2V0SGVpZ2h0O1xyXG5cclxuICAgICAgaWYgKHNjcm9sbFRvICYmIHNjcm9sbFRvQmxvY2spIHtcclxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gICAgICAgIHdpbmRvdy5zY3JvbGxUbyh7XHJcbiAgICAgICAgICB0b3A6IHNjcm9sbFRvQmxvY2tWYWx1ZSxcclxuICAgICAgICAgIGJlaGF2aW9yOiBcInNtb290aFwiLFxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAobWVudUljb24uY2xhc3NMaXN0LmNvbnRhaW5zKFwibWVudV9faWNvbi0tYWN0aXZlXCIpKSB7XHJcbiAgICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKFwibG9ja2VkXCIpO1xyXG4gICAgICAgIG1lbnVJY29uLmNsYXNzTGlzdC5yZW1vdmUoXCJtZW51X19pY29uLS1hY3RpdmVcIik7XHJcbiAgICAgICAgbWVudUJvZHkuY2xhc3NMaXN0LnJlbW92ZShcIm1lbnVfX2JvZHktLWFjdGl2ZVwiKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn1cclxuXHJcbi8qIHN0aWNreSBoZWFkZXIgb24gc2Nyb2xsKi9cclxuY29uc3QgaGVhZGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5oZWFkZXJcIik7XHJcbmNvbnN0IHN0aWNreSA9IGhlYWRlci5vZmZzZXRUb3A7XHJcblxyXG53aW5kb3cub25zY3JvbGwgPSBmdW5jdGlvbiAoKSB7XHJcbiAgaWYgKHdpbmRvdy5wYWdlWU9mZnNldCA+IHN0aWNreSkge1xyXG4gICAgaGVhZGVyLmNsYXNzTGlzdC5hZGQoXCJoZWFkZXItLXN0aWNreVwiKTtcclxuICB9IGVsc2Uge1xyXG4gICAgaGVhZGVyLmNsYXNzTGlzdC5yZW1vdmUoXCJoZWFkZXItLXN0aWNreVwiKTtcclxuICB9XHJcbn07XHJcbjtcclxuLyogc2VydmljZUxpc3QgKi9cclxuXHJcbmNvbnN0IHNlcnZpY2VEYXRhID0gW1xyXG4gIHtcclxuICAgIGlkOiBcIjFcIixcclxuICAgIGNhcmRJbWc6IFwiLi4vLi4vaW1nL3NlcnZpY2UvRGVsaXZlcnkuc3ZnXCIsXHJcbiAgICBjYXJkVGl0bGU6IFwiRnJlZSBEZWxldmVyeVwiLFxyXG4gICAgY2FyZFByaWNlOiBcIlwiLFxyXG4gICAgY2FyZFRleHQ6IFwiSXQgaXMgYSBsb25nIGVzdGFibGlzaGVkIGZhY3QgdGhhdCBhIHJlYWRlciB3aWxsIGJlIHRoZSBzZXJ2aWNlLlwiLFxyXG4gICAgYnRuVGV4dDogXCJcIixcclxuICB9LFxyXG4gIHtcclxuICAgIGlkOiBcIjJcIixcclxuICAgIGNhcmRJbWc6IFwiLi4vLi4vaW1nL3NlcnZpY2UvR3VhcmFudGVlLnN2Z1wiLFxyXG4gICAgY2FyZFRpdGxlOiBcIjEwMCUgR3VhcmFudGVlXCIsXHJcbiAgICBjYXJkUHJpY2U6IFwiXCIsXHJcbiAgICBjYXJkVGV4dDogXCJJdCBpcyBhIGxvbmcgZXN0YWJsaXNoZWQgZmFjdCB0aGF0IGEgcmVhZGVyIHdpbGwgYmUgdGhlIHNlcnZpY2UuXCIsXHJcbiAgICBidG5UZXh0OiBcIlwiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgaWQ6IFwiM1wiLFxyXG4gICAgY2FyZEltZzogXCIuLi8uLi9pbWcvc2VydmljZS9RdWFsaXR5LnN2Z1wiLFxyXG4gICAgY2FyZFRpdGxlOiBcIkJlc3QgUXVhbGl0eVwiLFxyXG4gICAgY2FyZFByaWNlOiBcIlwiLFxyXG4gICAgY2FyZFRleHQ6IFwiSXQgaXMgYSBsb25nIGVzdGFibGlzaGVkIGZhY3QgdGhhdCBhIHJlYWRlciB3aWxsIGJlIHRoZSBzZXJ2aWNlLlwiLFxyXG4gICAgYnRuVGV4dDogXCJcIixcclxuICB9LFxyXG5dO1xyXG5cclxuY29uc3Qgc2VydmljZUxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNlcnZpY2VfX2xpc3RcIik7XHJcblxyXG5pZiAoc2VydmljZURhdGEubGVuZ3RoID4gMCkge1xyXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc2VydmljZURhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgIGxldCBjYXJkID0gYDxsaSBjbGFzcz1cInNlcnZpY2VfX2l0ZW1cIiBkYXRhLWNhcmRJZD1cIiR7c2VydmljZURhdGFbaV0uaWR9XCI+YFxyXG5cdFx0Y2FyZCArPSBgPGRpdiBjbGFzcz1cImNhcmRcIj5gXHJcblx0XHRpZiAoc2VydmljZURhdGFbaV0uY2FyZFRpdGxlKSB7XHJcblx0XHRcdGNhcmQgKz0gYDxpbWcgY2xhc3M9XCJjYXJkX19pbWdcIiBzcmM9XCIke3NlcnZpY2VEYXRhW2ldLmNhcmRJbWd9XCIgYWx0PVwiJHtzZXJ2aWNlRGF0YVtpXS5jYXJkVGl0bGV9XCIgd2lkdGg9XCIyNTVcIiBoZWlnaHQ9XCIxNzVcIiAvPmBcclxuXHRcdH1cclxuXHRcdGlmIChzZXJ2aWNlRGF0YVtpXS5jYXJkVGl0bGUpIHtcclxuXHRcdFx0Y2FyZCArPSBgPGgzIGNsYXNzPVwiY2FyZF9fdGl0bGVcIj4ke3NlcnZpY2VEYXRhW2ldLmNhcmRUaXRsZX08L2gzPmBcclxuXHRcdH1cclxuXHRcdGlmIChzZXJ2aWNlRGF0YVtpXS5jYXJkUHJpY2UpIHtcclxuXHRcdFx0Y2FyZCArPSBgPHNwYW4gY2xhc3M9XCJjYXJkX19wcmljZVwiPiR7c2VydmljZURhdGFbaV0uY2FyZFByaWNlfTwvc3Bhbj5gXHJcblx0XHR9XHJcblx0XHRpZiAoc2VydmljZURhdGFbaV0uY2FyZFRleHQpIHtcclxuXHRcdFx0Y2FyZCArPSBgPHAgY2xhc3M9XCJjYXJkX190ZXh0XCI+JHtzZXJ2aWNlRGF0YVtpXS5jYXJkVGV4dH08L3A+YFxyXG5cdFx0fVxyXG5cdFx0aWYgKHNlcnZpY2VEYXRhW2ldLmJ0blRleHQpIHtcclxuXHRcdFx0Y2FyZCArPSBgXHJcblx0XHRcdFx0PGRpdiBjbGFzcz1cImNhcmRfX2J1dHRvblwiPlxyXG5cdFx0XHRcdFx0PGJ1dHRvbiBjbGFzcz1cImJ0blwiIGhyZWY9XCIjXCIgZGF0YS1zY3JvbGxUbz1cIiNcIiByZWw9XCJub3JlZmVycmVyXCIgdHlwZT1cImJ1dHRvblwiPiR7c2VydmljZURhdGFbaV0uYnRuVGV4dH08L2J1dHRvbj5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0YFxyXG5cdFx0fVxyXG5cdFx0Y2FyZCArPSBgPC9kaXY+PC9saT5gO1xyXG5cclxuICAgIHNlcnZpY2VMaXN0Lmluc2VydEFkamFjZW50SFRNTChcImJlZm9yZWVuZFwiLCBjYXJkKTtcclxuICB9XHJcbn1cclxuO1xyXG4vKiBmdXJuaXR1cmVMaXN0ICovXHJcbi8qIGZ1cm5pdHVyZURhdGEgKi9cclxuXHJcbmNvbnN0IGZ1cm5pdHVyZURhdGEgPSBbXHJcbiAge1xyXG4gICAgaWQ6IFwiMVwiLFxyXG4gICAgY2FyZEltZzogXCIuLi8uLi9pbWcvZnVybml0dXJlL2Z1cm5pdHVyZV9fMDAxLmpwZ1wiLFxyXG4gICAgY2FyZFRpdGxlOiBcIkZ1cm5pdHVyZSBOYW1lXCIsXHJcbiAgICBjYXJkUHJpY2U6IFwiJCAyNTBcIixcclxuICAgIGNhcmRUZXh0OiBcIkl0IGlzIGEgbG9uZyBlc3RpYWJzIGxpc2hlZCBmYWN0IHRoYXQgYSByZWFkZXIgd2lsbCBiZSB0aGUgc2VydmljZVwiLFxyXG4gICAgYnRuVGV4dDogXCJPcmRlciBOb3dcIixcclxuICB9LFxyXG4gIHtcclxuICAgIGlkOiBcIjJcIixcclxuICAgIGNhcmRJbWc6IFwiLi4vLi4vaW1nL2Z1cm5pdHVyZS9mdXJuaXR1cmVfXzAwMi5qcGdcIixcclxuICAgIGNhcmRUaXRsZTogXCJGdXJuaXR1cmUgTmFtZVwiLFxyXG5cclxuICAgIGNhcmRQcmljZTogXCIkIDI1MFwiLFxyXG4gICAgY2FyZFRleHQ6IFwiSXQgaXMgYSBsb25nIGVzdGlhYnMgbGlzaGVkIGZhY3QgdGhhdCBhIHJlYWRlciB3aWxsIGJlIHRoZSBzZXJ2aWNlXCIsXHJcbiAgICBidG5UZXh0OiBcIk9yZGVyIE5vd1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgaWQ6IFwiM1wiLFxyXG4gICAgY2FyZEltZzogXCIuLi8uLi9pbWcvZnVybml0dXJlL2Z1cm5pdHVyZV9fMDAzLmpwZ1wiLFxyXG4gICAgY2FyZFRpdGxlOiBcIkZ1cm5pdHVyZSBOYW1lXCIsXHJcbiAgICBjYXJkUHJpY2U6IFwiJCAyNTBcIixcclxuICAgIGNhcmRUZXh0OiBcIkl0IGlzIGEgbG9uZyBlc3RpYWJzIGxpc2hlZCBmYWN0IHRoYXQgYSByZWFkZXIgd2lsbCBiZSB0aGUgc2VydmljZVwiLFxyXG4gICAgYnRuVGV4dDogXCJPcmRlciBOb3dcIixcclxuICB9LFxyXG4gIHtcclxuICAgIGlkOiBcIjRcIixcclxuICAgIGNhcmRJbWc6IFwiLi4vLi4vaW1nL2Z1cm5pdHVyZS9mdXJuaXR1cmVfXzAwNC5qcGdcIixcclxuICAgIGNhcmRUaXRsZTogXCJGdXJuaXR1cmUgTmFtZVwiLFxyXG4gICAgY2FyZFByaWNlOiBcIiQgMjUwXCIsXHJcbiAgICBjYXJkVGV4dDogXCJJdCBpcyBhIGxvbmcgZXN0aWFicyBsaXNoZWQgZmFjdCB0aGF0IGEgcmVhZGVyIHdpbGwgYmUgdGhlIHNlcnZpY2VcIixcclxuICAgIGJ0blRleHQ6IFwiT3JkZXIgTm93XCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBpZDogXCI1XCIsXHJcbiAgICBjYXJkSW1nOiBcIi4uLy4uL2ltZy9mdXJuaXR1cmUvZnVybml0dXJlX18wMDUuanBnXCIsXHJcbiAgICBjYXJkVGl0bGU6IFwiRnVybml0dXJlIE5hbWVcIixcclxuXHJcbiAgICBjYXJkUHJpY2U6IFwiJCAyNTBcIixcclxuICAgIGNhcmRUZXh0OiBcIkl0IGlzIGEgbG9uZyBlc3RpYWJzIGxpc2hlZCBmYWN0IHRoYXQgYSByZWFkZXIgd2lsbCBiZSB0aGUgc2VydmljZVwiLFxyXG4gICAgYnRuVGV4dDogXCJPcmRlciBOb3dcIixcclxuICB9LFxyXG4gIHtcclxuICAgIGlkOiBcIjZcIixcclxuICAgIGNhcmRJbWc6IFwiLi4vLi4vaW1nL2Z1cm5pdHVyZS9mdXJuaXR1cmVfXzAwNi5qcGdcIixcclxuICAgIGNhcmRUaXRsZTogXCJGdXJuaXR1cmUgTmFtZVwiLFxyXG4gICAgY2FyZFByaWNlOiBcIiQgMjUwXCIsXHJcbiAgICBjYXJkVGV4dDogXCJJdCBpcyBhIGxvbmcgZXN0aWFicyBsaXNoZWQgZmFjdCB0aGF0IGEgcmVhZGVyIHdpbGwgYmUgdGhlIHNlcnZpY2VcIixcclxuICAgIGJ0blRleHQ6IFwiT3JkZXIgTm93XCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBpZDogXCI3XCIsXHJcbiAgICBjYXJkSW1nOiBcIi4uLy4uL2ltZy9mdXJuaXR1cmUvZnVybml0dXJlX18wMDcuanBnXCIsXHJcbiAgICBjYXJkVGl0bGU6IFwiRnVybml0dXJlIE5hbWVcIixcclxuXHJcbiAgICBjYXJkUHJpY2U6IFwiJCAyNTBcIixcclxuICAgIGNhcmRUZXh0OiBcIkl0IGlzIGEgbG9uZyBlc3RpYWJzIGxpc2hlZCBmYWN0IHRoYXQgYSByZWFkZXIgd2lsbCBiZSB0aGUgc2VydmljZVwiLFxyXG4gICAgYnRuVGV4dDogXCJPcmRlciBOb3dcIixcclxuICB9LFxyXG4gIHtcclxuICAgIGlkOiBcIjhcIixcclxuICAgIGNhcmRJbWc6IFwiLi4vLi4vaW1nL2Z1cm5pdHVyZS9mdXJuaXR1cmVfXzAwOC5qcGdcIixcclxuICAgIGNhcmRUaXRsZTogXCJGdXJuaXR1cmUgTmFtZVwiLFxyXG4gICAgY2FyZFByaWNlOiBcIiQgMjUwXCIsXHJcbiAgICBjYXJkVGV4dDogXCJJdCBpcyBhIGxvbmcgZXN0aWFicyBsaXNoZWQgZmFjdCB0aGF0IGEgcmVhZGVyIHdpbGwgYmUgdGhlIHNlcnZpY2VcIixcclxuICAgIGJ0blRleHQ6IFwiT3JkZXIgTm93XCIsXHJcbiAgfSxcclxuXTtcclxuO1xyXG5cclxuY29uc3QgZnVybml0dXJlTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZnVybml0dXJlX19saXN0XCIpO1xyXG5cclxuaWYgKGZ1cm5pdHVyZURhdGEubGVuZ3RoID4gMCkge1xyXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgZnVybml0dXJlRGF0YS5sZW5ndGg7IGkrKykge1xyXG4gICAgbGV0IGNhcmQgPSBgPGxpIGNsYXNzPVwic2VydmljZV9faXRlbVwiIGRhdGEtY2FyZElkPVwiJHtmdXJuaXR1cmVEYXRhW2ldLmlkfVwiPmBcclxuXHRcdGNhcmQgKz0gYDxkaXYgY2xhc3M9XCJjYXJkXCI+YFxyXG5cdFx0aWYgKGZ1cm5pdHVyZURhdGFbaV0uY2FyZFRpdGxlKSB7XHJcblx0XHRcdGNhcmQgKz0gYDxpbWcgY2xhc3M9XCJjYXJkX19pbWcgY2FyZF9faW1nLS1iaWdcIiBzcmM9XCIke2Z1cm5pdHVyZURhdGFbaV0uY2FyZEltZ31cIiBhbHQ9XCIke2Z1cm5pdHVyZURhdGFbaV0uY2FyZFRpdGxlfVwiIHdpZHRoPVwiMjU1XCIgaGVpZ2h0PVwiMTc1XCIgLz5gXHJcblx0XHR9XHJcbiAgICBjYXJkICs9IGA8ZGl2IGNsYXNzPVwiY2FyZF9faGVhZGVyXCI+YFxyXG5cdFx0aWYgKGZ1cm5pdHVyZURhdGFbaV0uY2FyZFRpdGxlKSB7XHJcblx0XHRcdGNhcmQgKz0gYDxoMyBjbGFzcz1cImNhcmRfX3RpdGxlXCI+JHtmdXJuaXR1cmVEYXRhW2ldLmNhcmRUaXRsZX08L2gzPmBcclxuXHRcdH1cclxuXHRcdGlmIChmdXJuaXR1cmVEYXRhW2ldLmNhcmRQcmljZSkge1xyXG5cdFx0XHRjYXJkICs9IGA8c3BhbiBjbGFzcz1cImNhcmRfX3ByaWNlXCI+JHtmdXJuaXR1cmVEYXRhW2ldLmNhcmRQcmljZX08L3NwYW4+YFxyXG5cdFx0fVxyXG4gICAgY2FyZCArPSBgPC9kaXY+YFxyXG5cdFx0aWYgKGZ1cm5pdHVyZURhdGFbaV0uY2FyZFRleHQpIHtcclxuXHRcdFx0Y2FyZCArPSBgPHAgY2xhc3M9XCJjYXJkX190ZXh0XCI+JHtmdXJuaXR1cmVEYXRhW2ldLmNhcmRUZXh0fTwvcD5gXHJcblx0XHR9XHJcblx0XHRpZiAoZnVybml0dXJlRGF0YVtpXS5idG5UZXh0KSB7XHJcblx0XHRcdGNhcmQgKz0gYFxyXG5cdFx0XHRcdDxkaXYgY2xhc3M9XCJjYXJkX19idXR0b25cIj5cclxuXHRcdFx0XHRcdDxidXR0b24gY2xhc3M9XCJidG5cIiBocmVmPVwiI1wiIGRhdGEtc2Nyb2xsVG89XCIjXCIgcmVsPVwibm9yZWZlcnJlclwiIHR5cGU9XCJidXR0b25cIj4ke2Z1cm5pdHVyZURhdGFbaV0uYnRuVGV4dH08L2J1dHRvbj5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0YFxyXG5cdFx0fVxyXG5cdFx0Y2FyZCArPSBgPC9kaXY+PC9saT5gO1xyXG5cclxuICAgIGZ1cm5pdHVyZUxpc3QuaW5zZXJ0QWRqYWNlbnRIVE1MKFwiYmVmb3JlZW5kXCIsIGNhcmQpO1xyXG4gIH1cclxufVxyXG47XHJcbi8qIHBvcHVwIDQwNCBmb3Igbm9uZXhpc3RlbnQgbGlua3MgKi9cclxuXHJcbmNvbnN0IG5vbmV4aXN0ZW50TGlua3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbaHJlZj1cIiNcIl0nKTtcclxuXHJcbmNvbnN0IHBvcHVwQmcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwNDA0XCIpO1xyXG5jb25zdCBwb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXA0MDRfX2JvZHlcIik7XHJcbmNvbnN0IGNsb3NlUG9wdXBCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwNDA0X19jbG9zZVwiKTtcclxuXHJcbm5vbmV4aXN0ZW50TGlua3MuZm9yRWFjaCgobm9uZXhpc3RlbnRMaW5rKSA9PiB7XHJcbiAgbm9uZXhpc3RlbnRMaW5rLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xyXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QuYWRkKFwibG9ja2VkXCIpO1xyXG4gICAgcG9wdXBCZy5jbGFzc0xpc3QuYWRkKFwicG9wdXA0MDQtLWFjdGl2ZVwiKTtcclxuICAgIHBvcHVwLmNsYXNzTGlzdC5hZGQoXCJwb3B1cDQwNF9fYm9keS0tYWN0aXZlXCIpO1xyXG4gIH0pO1xyXG59KTtcclxuXHJcbmNsb3NlUG9wdXBCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5yZW1vdmUoXCJsb2NrZWRcIik7XHJcbiAgcG9wdXBCZy5jbGFzc0xpc3QucmVtb3ZlKFwicG9wdXA0MDQtLWFjdGl2ZVwiKTtcclxuICBwb3B1cC5jbGFzc0xpc3QucmVtb3ZlKFwicG9wdXA0MDRfX2JvZHktLWFjdGl2ZVwiKTtcclxufSk7XHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcclxuICBpZiAoZS50YXJnZXQgPT09IHBvcHVwQmcpIHtcclxuICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LnJlbW92ZShcImxvY2tlZFwiKTtcclxuICAgIHBvcHVwQmcuY2xhc3NMaXN0LnJlbW92ZShcInBvcHVwNDA0LS1hY3RpdmVcIik7XHJcbiAgICBwb3B1cC5jbGFzc0xpc3QucmVtb3ZlKFwicG9wdXA0MDRfX2JvZHktLWFjdGl2ZVwiKTtcclxuICB9XHJcbn0pO1xyXG47Il0sImZpbGUiOiJtYWluLmpzIn0=
